(?# Match Fibonacci numbers in the domain ^x*$ using only the ECMAScript subset of regex functionality )

^(?:
    (?=
        (x(x*))                          (?# \1 = potential number for which \1 * \1 * 5 plus or minus 4 is a perfect square;
                                             this is true iff \1 is a Fibonacci number. Outside the surrounding lookahead block,
                                             \1 is guaranteed to be the largest number for which this is true such that
                                             \1 * \1 * 5 + 4 fits into the main number. \2 = \1 - 1 )
        (?=
            (?=\1*(x*))
            (\1\2+?(?=\1*\3$))           (?# \4 = result of multiplying \1 * \1 )
        )
        .*(?=\4{5} x{4}$) (?:|x{8})      (?# leave a leftover number equalling \4 * 5 plus or minus 4, on which the next test will be done )
        (?# require that the current leftover number is a perfect square)
        (x(x*))(?=\5*$)                  (?# \5 = potential square root, which will be the square root outside the surrounding lookahead; \6 = \5-1 )
        (?:
            \6
            (?!\5+$)
        )+$
    )
    (?=.*(?=\5)\1(x(x*))\7)      (?# \7 = the next lower Fibonacci number than \1; \8 = \7 - 1 )
    (?=
        (?=\7*(x*))
        (\7\8+?(?=\7*\9$))       (?# \10 = result of multiplying \7 * \7 )
    )
    (\10\4\4)\4                  (?# \11 )
    (\11?)                       (?# \12 - controls which multiplication we're trying )
    (?=
        (x(                      (?# \13 = \1*4 or \1*6 = larger number to multiply by; \14 = \13 - 1 )
            \2\1{3}
            (?=(
                (?=.*$\12)
            |
                \1\1
            ))\15
        ))+$
    )
    \7                           (?# \7 = smaller number to multiply by )
    (
        \14
        (?!\13+$)
    )+
|
    xx?x?|(x{8}|)(x{5}\17?)?     (?# the Fibonacci numbers 0, 1, 2, 3, 5, 8, 13, 21 cannot be handled by our main algorithm, so match them here )
)$
