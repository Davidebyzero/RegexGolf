(?# Giving an input number N in the domain ^x*$, this regex returns floor{N / sqrt{2}} )
(?=
    (x(x*))                    (?# \1 = will be the square root of the main number, rounded down; \2 = \1 - 1 )
    (x)*(?=\1*$)               (?# \3 = tool to round up instead of down )
    \2+$
)

(?# Step 1: Calculate N*N in base ceil{sqrt{N}} )

(?=(\1\3)*(x?(x*)))            (?# \4 = \1 + \3 = ceil{sqrt{N}}, the number base to work in; \5 = N % \4; \6 = \5-1, or 0 if \5==0 )
(?=
	\5
	(x(x*))                    (?# \7 = floor{N / \4}; \8 = \7-1 )
	(?=\7*$)
	(?=(\2\3)+$)               (?# \9 = \4 - 1 )
	\9\8*$
)
(?=
	.*
	(?=\5*$)
	(\5\6+$)                   (?# \10 = \5 * \5 )
)
(?=
	.*
	(                          (?# \11 = \5 * \7; must do symmetric multiplication, because \5 is occasionally 1 larger than \7 )
		(?=\5*$)
		(?=\7*$)
		(?=\5\8+$)
		   \7\6+$
	|
		$\5                    (?# must make a special case for \5==0, because \7 might not be 0 )
	)
)
(?=
	.*(?=\10$)
	(x*?)(?=\4*$)              (?# \12 = \10 % \4, the base-\4 digit in place 0 of the result for N*N )
	(x?(x*))                   (?# \13 = floor{\10 / \4}; \14 = \13-1, or 0 if \13==0 )
	(?=\13*$)
	(
		(?=\9+$)
		\9\14*$
	|
		$\13                   (?# must make a special case for \13==0, because \9 is nonzero )
	)
)
(?=
	.*(?=\11$)
	(x*?)(?=\4*$)              (?# \16 = \11 % \4 )
	(x?(x*))                   (?# \17 = floor{\11 / \4}; \18 = \17-1, or 0 if \17==0 )
	(?=\17*$)
	(
		(?=\9+$)
		\9\18*$
	|
		$\17                   (?# must make a special case for \17==0, because \9 is nonzero )
	)
)
(?=
	.*(?=\16\16\13$)           (?# tail = 2 * \16 + \13 )
	(x*?)(?=\4*$)              (?# \20 = \20 % \4, the base-\4 digit in place 1 of the result for N*N )
	(x?(x*))                   (?# \21 = floor{\20 / \4}; \22 = \21-1, or 0 if \21==0 )
	(?=\21*$)
	(
		(?=\9+$)
		\9\22*$
	|
		$\21                   (?# must make a special case for \21==0, because \9 is nonzero )
	)
)                              (?# {\7*\7 + 2*\17 + \21} = the base-\4 digit in place 2 of the result for N*N, which is allowed to exceed \4 and will always do so;
                                   Note that it will be equal to N iff N is a perfect square, because of the choice of number base. )

(?# Step 2: Find the largest M such that 2*M*M is not greater than N*N )

(?*(x*))                       (?# \24 = M )

(?# Step 2a: Calculate M*M in base \4 )
(?=
	.*(?=\24$)
	(?=\4*(x?(x*)))\25         (?# \25 = M % \4; \26 = \25-1, or 0 if \25==0 )
	(x(x*))                    (?# \27 = floor{M / \4}; \28 = \27-1 )
	(?=\27*$)
	(?=\9+$)
	\9\28*$
)
(?=
	.*
	(?=\25*$)
	(\25\26+$)                 (?# \29 = \25 * \25 )
)
(?=
	.*
	(                          (?# \30 = \25 * \27; must do symmetric multiplication, because \25 is occasionally 1 larger than \27 )
		(?=\25*$)
		(?=\27*$)
		(?=\25\28+$)
		   \27\26+$
	|
		$\25                   (?# must make a special case for \25==0, because \27 might not be 0 )
	)
)
(?=
	.*
	(?=\27*$)
	(\27\28+$)                 (?# \31 = \27 * \27 )
)
(?=
	.*(?=\29$)
	(x*?)(?=\4*$)              (?# \32 = \29 % \4, the base-\4 digit in place 0 of the result for M*M )
	(x?(x*))                   (?# \33 = floor{\29 / \4}; \34 = \33-1, or 0 if \33==0 )
	(?=\33*$)
	(
		(?=\9+$)
		\9\34*$
	|
		$\33                   (?# must make a special case for \33==0, because \9 is nonzero )
	)
)
(?=
	.*(?=\30$)
	(x*?)(?=\4*$)              (?# \36 = \30 % \4 )
	(x?(x*))                   (?# \37 = floor{\30 / \4}; \38 = \37-1, or 0 if \37==0 )
	(?=\37*$)
	(
		(?=\9+$)
		\9\38*$
	|
		$\37                   (?# must make a special case for \37==0, because \9 is nonzero )
	)
)
(?=
	.*(?=\36\36\33$)           (?# tail = 2 * \36 + \33 )
	(x*?)(?=\4*$)              (?# \40 = \40 % \4, the base-\4 digit in place 1 of the result for M*M )
	(x?(x*))                   (?# \41 = floor{\40 / \4}; \42 = \41-1, or 0 if \41==0 )
	(?=\41*$)
	(
		(?=\9+$)
		\9\42*$
	|
		$\41                   (?# must make a special case for \41==0, because \9 is nonzero )
	)
)                              (?# {\31 + 2*\37 + \41} = the base-\4 digit in place 2 of the result for M*M, which is allowed to exceed \4 and will always do so )

(?# Step 2b: Calculate 2*M*M in base \4 )
(?=
	(?=(\32\32))               (?# \44 = 2*\32 )
	.*(?=\4$)
	(x\44|)                    (?# \45 = \44+1 if it fits in a base \4 digit, or 0 otherwise )
)
(?=
	.*(?=\44)
	\4*(x*)                    (?# \46 = \44 % \4, the base-\4 digit in place 0 of the result for 2*M*M )
)
(?=  
	(                          (?# \47 = 2*\40 + {\44 / \4} )
		\40\40
		(
			(?!.*$\45)
		|
			(?=.*$\45)x
		)
	)
)
(?=
	.*(?=\4$)
	(x\47|)                    (?# \49 = \47+1 if it fits in a base \4 digit, or 0 otherwise )
)
(?=
	.*(?=\47)
	\4*(x*)                    (?# \50 = \47 % \4, the base-\4 digit in place 1 of the result for 2*M*M )
)
(?=
	(                          (?# \51 = 2*{\31 + 2*\37 + \41} + {\47 / 3}, the base-\4 digit in place 2 of the result for 2*M*M, which is allowed to exceed \4 and will always do so )
		(\31\37\37\41){2}
		(
			(?!.*$\49)
		|
			(?=.*$\49)x
		)
	)
)

(?# Step 2c: Require that 2*M*M <= N*N )

(?=
	(?=
		(.*)                   (?# \54 )
		\17\17\21
		(?=\7*$)               (?# tail = \7 * \7 )
		\7\8+$
	)
	\54                        (?# tail = {\7*\7 + 2*\17 + \21}; we can do this unconditionally because our digits in place 2 are always greater than those in places 0..1 )
	(
		x\51
	|
		(?=\51$)
		(?=
			.*(?=\20$)x\50
		|
			(?=
				.*(?=\20$)\50$
			)
			(?=
				.*(?=\12$)\46
			)
		)
	)
)

\24

|x(?=x)|                       (?# handle inputs in the domain ^x{0,2}$ )