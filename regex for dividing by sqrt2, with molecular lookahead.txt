(?# Giving an input number N in the domain ^x*$, this regex returns floor{N / sqrt{2}} )
(?=
    (x(x*))                    (?# \1 = will be the square root of the main number, rounded down; \2 = \1 - 1 )
    (x)*(?=\1*$)               (?# \3 = tool to round up instead of down )
    \2+$
)

(?# Step 1: Calculate N*N in base ceil{sqrt{N}} )

(?=(\1\3)*(x?(x*)))            (?# \4 = \1 + \3 = ceil{sqrt{N}}, the number base to work in; \5 = N % \4; \6 = \5-1, or 0 if \5==0 )
(?=
	\5
	(x(x*))                    (?# \7 = floor{N / \4}; \8 = \7-1 )
	(?=\7*$)
	(?=(\2\3)+$)               (?# \9 = \4 - 1 )
	\9\8*$
)
(?=
	.*
	(?=\5*$)
	(\5\6+$)                   (?# \10 = \5 * \5 )
)
(?=
	.*
	(                          (?# \11 = \5 * \7; must do symmetric multiplication, because \5 is occasionally 1 larger than \7 )
		(?=\5*$)
		(?=\7*$)
		(?=\5\8+$)
		   \7\6+$
	|
		$\5                    (?# must make a special case for \5==0, because \7 might not be 0 )
	)
)
(?=
	.*
	(?=\7*$)
	(\7\8+$)                   (?# \12 = \7 * \7 )
)
(?=
	.*(?=\10$)
	(?=\4*(x*))\13             (?# \13 = \10 % \4, the base-\4 digit in place 0 of the result for N*N )
	(x?(x*))                   (?# \14 = floor{\10 / \4}; \15 = \14-1, or 0 if \14==0 )
	(?=\14*$)
	(
		(?=\9+$)
		\9\15*$
	|
		$\14                   (?# must make a special case for \14==0, because \9 is nonzero )
	)
)
(?=
	.*(?=\11$)
	(?=\4*(x*))\17             (?# \17 = \11 % \4 )
	(x?(x*))                   (?# \18 = floor{\11 / \4}; \19 = \18-1, or 0 if \18==0 )
	(?=\18*$)
	(
		(?=\9+$)
		\9\19*$
	|
		$\18                   (?# must make a special case for \18==0, because \9 is nonzero )
	)
)
(?=
	.*(?=\17\17\14$)           (?# tail = 2 * \11 + \14 )
	(?=\4*(x*))\21             (?# \21 = \21 % \4, the base-\4 digit in place 1 of the result for N*N )
	(x?(x*))                   (?# \22 = floor{\21 / \4}; \23 = \22-1, or 0 if \22==0 )
	(?=\22*$)
	(
		(?=\9+$)
		\9\23*$
	|
		$\22                   (?# must make a special case for \22==0, because \9 is nonzero )
	)
)                              (?# {\12 + 2*\18 + \22} = the base-\4 digit in place 2 of the result for N*N; it is allowed to exceed \4 )

(?# Step 2: Find the largest M such that 2*M*M is not greater than N*N )

(?*(x*))                       (?# \25 = M )

(?# Step 2a: Calculate M*M in base \4 )
(?=
	.*(?=\25$)
	(?=\4*(x?(x*)))\26         (?# \26 = M % \4; \27 = \26-1, or 0 if \26==0 )
	(x(x*))                    (?# \28 = floor{M / \4}; \29 = \28-1 )
	(?=\28*$)
	(?=\9+$)
	\9\29*$
)
(?=
	.*
	(?=\26*$)
	(\26\27+$)                 (?# \30 = \26 * \26 )
)
(?=
	.*
	(                          (?# \31 = \26 * \28; must do symmetric multiplication, because \26 is occasionally 1 larger than \28 )
		(?=\26*$)
		(?=\28*$)
		(?=\26\29+$)
		   \28\27+$
	|
		$\26                   (?# must make a special case for \26==0, because \28 might not be 0 )
	)
)
(?=
	.*
	(?=\28*$)
	(\28\29+$)                 (?# \32 = \28 * \28 )
)
(?=
	.*(?=\30$)
	(?=\4*(x*))\33             (?# \33 = \30 % \4, the base-\4 digit in place 0 of the result for M*M )
	(x?(x*))                   (?# \34 = floor{\30 / \4}; \35 = \34-1, or 0 if \34==0 )
	(?=\34*$)
	(
		(?=\9+$)
		\9\35*$
	|
		$\34                   (?# must make a special case for \34==0, because \9 is nonzero )
	)
)
(?=
	.*(?=\31$)
	(?=\4*(x*))\37             (?# \37 = \31 % \4 )
	(x?(x*))                   (?# \38 = floor{\31 / \4}; \39 = \38-1, or 0 if \38==0 )
	(?=\38*$)
	(
		(?=\9+$)
		\9\39*$
	|
		$\38                   (?# must make a special case for \38==0, because \9 is nonzero )
	)
)
(?=
	.*(?=\37\37\34$)           (?# tail = 2 * \31 + \34 )
	(?=\4*(x*))\41             (?# \41 = \41 % \4, the base-\4 digit in place 1 of the result for M*M )
	(x?(x*))                   (?# \42 = floor{\41 / \4}; \43 = \42-1, or 0 if \42==0 )
	(?=\42*$)
	(
		(?=\9+$)
		\9\43*$
	|
		$\42                   (?# must make a special case for \42==0, because \9 is nonzero )
	)
)                              (?# {\32 + 2*\38 + \42} = the base-\4 digit in place 2 of the result for M*M; it is allowed to exceed \4 )

(?# Step 2b: Calculate 2*M*M in base \4 )
(?=
	(?=(\33\33))               (?# \45 = 2*\33 )
	.*(?=\4$)
	(x\45|)                    (?# \46 = \45+1 if it fits in a base \4 digit, or 0 otherwise )
)
(?=
	.*(?=\45)
	\4*(x*)                    (?# \47 = \45 % \4, the base-\4 digit in place 0 of the result for 2*M*M )
)
(?=  
	(                          (?# \48 = 2*\41 + {\45 / \4} )
		\41\41
		(
			(?!.*$\46)
		|
			(?=.*$\46)x
		)
	)
)
(?=
	.*(?=\4$)
	(x\48|)                    (?# \50 = \48+1 if it fits in a base \4 digit, or 0 otherwise )
)
(?=
	.*(?=\48)
	\4*(x*)                    (?# \51 = \48 % \4, the base-\4 digit in place 1 of the result for 2*M*M )
)
(?=
	(                          (?# \52 = 2*{\32 + 2*\38 + \42} + {\48 / 3}, the base-\4 digit in place 2 of the result for 2*M*M; it is allowed to exceed \4 )
		(\32\38\38\42){2}\52
		(
			(?!.*$\50)
		|
			(?=.*$\50)x
		)
	)
)

(?# Step 2c: Require that 2*M*M <= N*N )

(?=
	.*(?=\12\18\18\22$)        (?# tail = {\12 + 2*\18 + \22} )
	(
		x\52
	|
		(?=\52$)
		(?=
			.*(?=\21$)x\51
		|
			(?=
				.*(?=\21$)\51$
			)
			(?=
				.*(?=\13$)\47
			)
		)
	)
)

\25

|x(?=x)|                       (?# handle inputs in the domain ^x{0,2}$ )