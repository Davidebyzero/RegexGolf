(?# Giving an input number N in the domain ^x*$, this regex returns floor{N / sqrt{2}} )
(?=
    (x(x*))                    (?# \1 = will be the square root of the main number, rounded down; \2 = \1 - 1 )
    (x)*(?=\1*$)               (?# \3 = tool to round up instead of down )
    \2+$
)

(?# Step 1: Calculate N*N in base ceil{sqrt{N}} )

(?=(x(\2\3))*(x?(x*)))         (?# \4 = \1 + \3 = ceil{sqrt{N}}, the number base to work in; \5 = \4-1; \6 = N % \4; \7 = \6-1, or 0 if \6==0 )
(?=
	\6
	(x(x*))                    (?# \8 = floor{N / \4}; \9 = \8-1 )
	(?=\8*$)                   (?# we can skip the test for divisibility by \5 because it's guaranteed that \5 <= \8 )
	\5\9*$
)
(?=
	.*
	(                          (?# \10 = \6 * \8; must do symmetric multiplication, because \6 is occasionally 1 larger than \8 )
		(?=\6*$)
		(?=\8*$)
		(?=\6\9+$)
		   \8\7+$
	|
		$\6                    (?# must make a special case for \6==0, because \8 might not be 0 )
	)
)
(?=
	.*
	(?=
		(?=\6*$)               (?# tail = \6 * \6 )
		\6\7+$
	)
	(x*?)(?=\4*$)              (?# \11 =       {\6 * \6} % \4, the base-\4 digit in place 0 of the result for N*N )
	(x?(x*))                   (?# \12 = floor{{\6 * \6} / \4}; \13 = \12-1, or 0 if \12==0 )
	(?=\12*$)
	(
		(?=\5+$)
		\5\13*$
	|
		$\12                   (?# must make a special case for \12==0, because \5 is nonzero )
	)
)
(?=
	.*(?=\10$)
	(x*?)(?=\4*$)              (?# \15 =       \10 % \4 )
	(x?(x*))                   (?# \16 = floor{\10 / \4}; \17 = \16-1, or 0 if \16==0 )
	(?=\16*$)
	(
		(?=\5+$)
		\5\17*$
	|
		$\16                   (?# must make a special case for \16==0, because \5 is nonzero )
	)
)
(?=
	.*(?=\15\15\12$)           (?# tail = 2 * \15 + \12 )
	(x*?)(?=\4*$)              (?# \19 =       {2 * \15 + \12} % \4, the base-\4 digit in place 1 of the result for N*N )
	(x?(x*))                   (?# \20 = floor{{2 * \15 + \12} / \4}; \21 = \20-1, or 0 if \20==0 )
	(?=\20*$)
	(
		(?=\5+$)
		\5\21*$
	|
		$\20                   (?# must make a special case for \20==0, because \5 is nonzero )
	)
)                              (?# {\8*\8 + 2*\16 + \20} = the base-\4 digit in place 2 of the result for N*N, which is allowed to exceed \4 and will always do so;
                                   Note that it will be equal to N iff N is a perfect square, because of the choice of number base. )

(?# Step 2: Find the largest M such that 2*M*M is not greater than N*N )

(?*(x*?))                      (?# \23 = N - M )

(?# Step 2a: Calculate M*M in base \4 )
(?=
	\23
	(                          (?# \24 = M )
		(?=\4*(x?(x*)))\25     (?# \25 =       M % \4; \26 = \25-1, or 0 if \25==0 )
		(x(x*))                (?# \27 = floor{M / \4}; \28 = \27-1 )
		(?=\27*$)              (?# we can skip the test for divisibility by \5, but I'm not sure why; TODO: figure out why this is )
		\5\28*$
	)
)
(?=
	(.*)                       (?# \29 = tool to make tail = \30 )
	(                          (?# \30 = \25 * \27; must do symmetric multiplication, because \25 is occasionally 1 larger than \27 )
		(?=\25*$)
		(?=\27*$)
		(?=\25\28+$)
		   \27\26+$
	|
		$\25                   (?# must make a special case for \25==0, because \27 might not be 0 )
	)
)
(?=
	.*
	(?=\27*$)
	(\27\28+$)                 (?# \31 = \27 * \27 )
)
(?=
	.*
	(?=
		(?=\25*$)              (?# tail = \25 * \25 )
		\25\26+$
	)
	(x*?)(?=\4*$)              (?# \32 =       {\25 * \25} % \4, the base-\4 digit in place 0 of the result for M*M )
	(x?(x*))                   (?# \33 = floor{{\25 * \25} / \4}; \34 = \33-1, or 0 if \33==0 )
	(?=\33*$)
	(
		(?=\5+$)
		\5\34*$
	|
		$\33                   (?# must make a special case for \33==0, because \5 is nonzero )
	)
)
(?=
	\29                        (?# tail = \30 )
	(x*?)(?=\4*$)              (?# \36 =       \30 % \4 )
	(x?(x*))                   (?# \37 = floor{\30 / \4}; \38 = \37-1, or 0 if \37==0 )
	(?=\37*$)
	(
		(?=\5+$)
		\5\38*$
	|
		$\37                   (?# must make a special case for \37==0, because \5 is nonzero )
	)
)
(?=
	.*(?=\36\36\33$)           (?# tail = 2 * \36 + \33 )
	(x*?)(?=\4*$)              (?# \40 =       {2 * \36 + \33} % \4, the base-\4 digit in place 1 of the result for M*M )
	(x?(x*))                   (?# \41 = floor{{2 * \36 + \33} / \4}; \42 = \41-1, or 0 if \41==0 )
	(?=\41*$)
	(
		(?=\5+$)
		\5\42*$
	|
		$\41                   (?# must make a special case for \41==0, because \5 is nonzero )
	)
)                              (?# {\31 + 2*\37 + \41} = the base-\4 digit in place 2 of the result for M*M, which is allowed to exceed \4 and will always do so )

(?# Step 2b: Calculate 2*M*M in base \4 )
(?=
	.*(?=(\32\32))             (?# \44 = 2*\32; tail = \44 )
	\4*(x*)                    (?# \45 = \44 % \4, the base-\4 digit in place 0 of the result for 2*M*M )
)
(?=  
	(                          (?# \46 = 2*\40 + {\44 / \4} )
		(                      (?# +1 carry if \44 does not fit in a base \4 digit )
			(?=
				.*(?!\44)\5
			)x
		)?
		\40\40
	)
	(.*)                       (?# \48 = tool to make tail = \46 )
)
(?=
	\48                        (?# tail = \46 )
	\4*(x*)                    (?# \49 = \46 % \4, the base-\4 digit in place 1 of the result for 2*M*M )
)
(?=
	(                          (?# \50 = 2*{\31 + 2*\37 + \41} + {\46 / 3}, the base-\4 digit in place 2 of the result for 2*M*M, which is allowed to exceed \4 and will always do so )
		(                      (?# +1 carry if \46 does not fit in a base \4 digit )
			(?=
				.*(?!\46)\5
			)x
		)?
		(\31\37\37\41){2}
	)
)

(?# Step 2c: Require that 2*M*M <= N*N )

(?=
	(?=
		(.*)                   (?# \53 )
		\16\16\20
		(?=\8*$)               (?# tail = \8 * \8 )
		\8\9+$
	)
	\53                        (?# tail = {\8*\8 + 2*\16 + \20}; we can do this unconditionally because our digits in place 2 are always greater than those in places 0..1 )
	(
		x\50
	|
		(?=\50$)
		(?=
			.*(?!\19)\49
		|
			(?=
				.*(?=\19$)\49$
			)
			(?=
				.*(?=\11$)\45
			)
		)
	)
)

\24

|x\B|                          (?# handle inputs in the domain ^x{0,2}$ )