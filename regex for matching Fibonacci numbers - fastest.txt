(?# Match Fibonacci numbers in the domain ^x*$ using only the ECMAScript subset of regex functionality )

^(?:
    (?=
        (x(x+?))                             (?# \1 = will be the square root of 1/8 of the main number, rounded down; \2 = \1 - 1 )
        (?=
            (?=\1*(.*))\3\1*
            (\2+$)                           (?# \1\4 = result of multiplying \1*\1 )
        )
        (?!x{8}\1{23}\4{8})                  (?# make sure the next square wouldn't fit, allowing the lazy-quantifier speed optimization to work )
    )
    (?=
        \3                                   (?# seed first chunk for Fibonacci series: 1 + 1*1 - 2 = 0 )
        (?:
            (?=
                (?=(\1*)(x*))                (?# \5 = leftover leading up to current chunk; \6 = current chunk )
                (x(x*?))                     (?# \7 = will be one greater than the rounded-down square root of the current chunk; \8 = \7 - 1 )
                (?=
                    (?=\7*(.*))\9\7*
                    (\7\8+$)                 (?# \10 = result of multiplying \7*\7 )
                )
                (?!\5\10)
                (?=x\10(.*))                 (?# \11 )
                (?=\11\6(x(x*)))             (?# \12 = the larger Fibonacci number; \13 = \12 - 1; in sequence, we now have \7, \12, \7\12 )
            )
            (?=
                (?=\12*(.*))\14\12*
                (\12\13+$)                   (?# \15 = result of multiplying \12*\12 )
            )
            (?=\1(.*))                       (?# \16 )
            (?=(                             (?# \17 )
                (?!\16\15).*                 (?# exit the loop when \12*\12 > \1; \7 and \12 will be our return values )
            |
                (?=                          (?# encode the next Fibonacci pair chunk )
                    (?=x\15(.*))             (?# \18 )
                    (?=\18\7\12(.*))         (?# \19 )
                    \16\19(.*)               (?# \20 = encoding of next chunk )
                )
                \6                           (?# eat up the chunk we just decoded )
                \20                          (?# write the next chunk )
            ))\17
        )*
    )
    (?=
        (?=\12*(.*))\21\12*
        (\7\13+$)                            (?# \22 = \7 * \12 )
    )
    (?=(\10\15)(.*))                         (?# \23 = \7*\7 + \12*\12;  \24 = leftover for modulo usage )
    (?=(\22\22\15))                          (?# \25 = 2*\7*\12 + \12*\12 )
    (?=\25(.*))                              (?# \26 )
    (?=\26\23(x*))                           (?# \27 = \25 - \23; a consecutive sequence is formed by \27, \23, \25 )

    (?=x\24(x*))                             (?# \28 = \23 - 1, for modulo usage )
    (?=   \27*(x*))                          (?# \29 - this modulo allows us to link two events to the same condition; can be 0, 1, or 2 )
    (?=\28\23*(x*))                          (?# \30 - this modulo allows us to link two events to the same condition; can be 0, 1, or 2 )
    (?=(\29{3}\30))                          (?# \31 - this can be 2, 3, 4, or 6, corresponding to consecutive Fibonacci numbers that our main number might be )

    (?=( (?=.*(?=\31$)x{4})\23 | \27 )(.*))  (?# \32 = the first  Fibonacci that we'll use for our final formula; \33 = tool for subtracting 1 from it )
    (?=( (?=.*(?=\31$)x{4})\25 | \23 )(.*))  (?# \34 = the second Fibonacci that we'll use for our final formula; \35 = tool for subtracting 1 from it )
    (?=x\33(x*))                             (?# \36 = \32 - 1 )
    (?=x\35(x*))                             (?# \37 = \34 - 1 )

    (
        (?=
            (?=\32*(.*))\39\32*
            (\32\36+$)                       (?# \40 = result of multiplying \32*\32 )
        )\40
        
        (?=\34+$)                            (?# commence multiplication of \34*\34 )
        \34
        (
            \37
            (?!\34+$)
        )+
    |
        (?=\34{2}(.*))                       (?# \42 )
        (?=\42\32(x(x*)))                    (?# \43 = 2*\34 - \32;  \44 = 2*\34 - 1 )
        
        (?=\43+$)                            (?# commence multiplication of \43 * \32 )
        \32
        (
            \44
            (?!\43+$)
        )+
    )
|
    xx?x?|(x{5})?(x{8})?                     (?# the Fibonacci numbers 0, 1, 2, 3, 5, 8, 13 cannot be handled by our main algorithm, so match them here )
)$
