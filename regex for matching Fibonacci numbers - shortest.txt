(?# Match Fibonacci numbers in the domain ^x*$ using only the ECMAScript subset of regex functionality )

^(?:
    (?=
        (
            (x(x*))                    (?# \2 = potential number for which \2 * \2 * 5 plus or minus 4 is a perfect square;
                                           this is true iff \2 is a Fibonacci number. Outside the surrounding lookahead block,
                                           \2 is guaranteed to be the largest number for which this is true such that
                                           \2 * \2 * 5 + 4 fits into the main number. \3 = \2 - 1 )
            (?=
                .*(?=\2*$)
                (\2\3+$)               (?# \4 = result of multiplying \2 * \2 )
            )
        .*)(?=\4{5} x{4}$)             (?# leave a leftover number equalling \4 * 5 plus or minus 4, on which the next test will be done )
        (|x{4})\5                      (?# \5 = parity - is determined by whether the index of Fibonacci number \2 is odd or even )
        (?# require that the current leftover number is a perfect square)
        (x(x*))(?=\6*$)                (?# \6 = potential square root, which will be the square root outside the surrounding lookahead; \7 = \6-1 )
        (?:
            \7
            (?!\6+$)
        )+$
    )
    (?=\1 xx \5(x*)(\8 x?))            (?# \8 = arithmetic mean of \2*\2*5 and \6*\6, divided by 2; \9 = the other half, including remainder )
    (?=
        .*(?=\6+$)
        (\2\7+$)                       (?# \10 = result of multiplying \6 * \2, where \6 is larger )
    )
    (?=.*(?=\10)(x*)\11)               (?# \11 = \10 / 2; the remainder will always be the same as it is in \9, because \6 is odd iff \2 is odd )
    \9\10
    (
        \8\10
    |
        \11
    )
|
    x{0,3}|x{5}|x{8}|x{21}             (?# the Fibonacci numbers 0, 1, 2, 3, 5, 8, 21 cannot be handled by our main algorithm, so match them here;
                                           note, as it so happens the main algorithm does match 13, so that doesn't need to be handled here )
)$
